#! /usr/bin/env bash

if [[ $# -ne 1 ]]; then

    echo "Must specify an input argument to set runtime environment variables!"
    exit 1

fi

step=$1

export launcher="srun -l --verbose --export=ALL"
#export launcher="srun --export=ALL"
#export mpmd_opt="--multi-prog --output=mpmd.%j.%t.out"
export mpmd_opt="--multi-prog"

export OMP_STACKSIZE=2048000
export NTHSTACK=1024000000

ulimit -s unlimited
ulimit -a

export job=${PBS_JOBNAME:-$step}
export jobid=${job}.${PBS_JOBID:-$$}


# Calculate common variables
# Check first if the dependent variables are set
if [[ -n "${ntasks:-}" && -n "${max_tasks_per_node:-}" && -n "${tasks_per_node:-}" ]]; then
    max_threads_per_task=$((max_tasks_per_node / tasks_per_node))
    NTHREADSmax=${threads_per_task:-${max_threads_per_task}}
    NTHREADS1=${threads_per_task:-1}
    [[ ${NTHREADSmax} -gt ${max_threads_per_task} ]] && NTHREADSmax=${max_threads_per_task}
    [[ ${NTHREADS1} -gt ${max_threads_per_task} ]] && NTHREADS1=${max_threads_per_task}
    APRUN="${launcher} -n ${ntasks}"
else
    echo "ERROR config.resources must be sourced before sourcing GAEA.env"
    exit 2
fi

if [[ "${step}" = "prep" ]] || [[ "${step}" = "prepbufr" ]] || [[ "${step}" = "omgprep" ]]; then

    export POE="NO"
    export BACK="NO"
    export sys_tp="HERA"
    export launcher_PREP="srun"

    export NTHREADS_ATMANLVAR=${NTHREADSmax}
    export APRUN_ATMANLVAR="${APRUN} --cpus-per-task=${NTHREADS_ATMANLVAR}"

elif [ $step = "init" ]; then

    export APRUN="$APRUN"

elif [[ "${step}" = "anal" ]] || [[ "${step}" = "analcalc" ]]; then

    export MKL_NUM_THREADS=4
    export MKL_CBWR=AUTO

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

    export NTHREADS_GSI=${NTHREADSmax}
    export APRUN_GSI="${APRUN} --cpus-per-task=${NTHREADS_GSI}"

    export NTHREADS_CALCINC=${threads_per_task_calcinc:-1}
    [[ ${NTHREADS_CALCINC} -gt ${max_threads_per_task} ]] && export NTHREADS_CALCINC=${max_threads_per_task}
    export APRUN_CALCINC="${launcher} -n \$ncmd --cpus-per-task=${NTHREADS_CALCINC}"

    export NTHREADS_GAUSFCANL=1
    ntasks_gausfcanl=${ntasks_gausfcanl:-1}
    export APRUN_GAUSFCANL="${launcher} -n ${ntasks_gausfcanl} --cpus-per-task=${NTHREADS_GAUSFCANL}"

elif [[ "${step}" = "sfcanl" ]]; then

    export NTHREADS_CYCLE=${threads_per_task:-14}
    export APRUN_CYCLE="${APRUN} --cpus-per-task=${NTHREADS_CYCLE}"

elif [[ "${step}" = "eobs" ]] || [[ "${step}" = "gomg" ]]; then

    export MKL_NUM_THREADS=4
    export MKL_CBWR=AUTO

    export NTHREADS_GSI=${NTHREADSmax}
    export APRUN_GSI="${APRUN} --cpus-per-task=${NTHREADS_GSI}"

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

elif [[ "${step}" = "eupd" ]]; then

    export NTHREADS_ENKF=${NTHREADSmax}
    export APRUN_ENKF="${launcher} -n ${ntasks_enkf:-${ntasks}} --cpus-per-task=${NTHREADS_ENKF}"

    export CFP_MP=${CFP_MP:-"YES"}
    export USE_CFP=${USE_CFP:-"YES"}
    export APRUNCFP="${launcher} -n \$ncmd ${mpmd_opt}"

elif [[ "${step}" = "fcst" ]] || [[ "${step}" = "efcs" ]]; then

    export APRUN_FV3="${launcher} -n ${ntasks}"

    export NTHREADS_GAUSFCFCST=1
    ntasks_gaufcst=${ntasks_gaufcst:-1}
    export APRUN_GAUFCST="$launcher -n $ntasks_gaufcst"

elif [[ "${step}" = "post" ]]; then

    export APRUN_NP="${APRUN} --cpus-per-task=${NTHREADS1}"

    export APRUN_DWN="${APRUN} --cpus-per-task=${NTHREADS1}"

elif [[ "${step}" = "ecen" ]]; then

    export NTHREADS_ECEN=${NTHREADSmax}
    export APRUN_ECEN="${APRUN} --cpus-per-task=${NTHREADS_ECEN}"

    export NTHREADS_CHGRES=${threads_per_task_chgres:-12}
    [[ ${NTHREADS_CHGRES} -gt ${max_tasks_per_node} ]] && export NTHREADS_CHGRES=${max_tasks_per_node}
    export APRUN_CHGRES="time"

    export NTHREADS_CALCINC=${threads_per_task_calcinc:-1}
    [[ ${NTHREADS_CALCINC} -gt ${max_threads_per_task} ]] && export NTHREADS_CALCINC=${max_threads_per_task}
    export APRUN_CALCINC="${APRUN} --cpus-per-task=${NTHREADS_CALCINC}"

elif [[ "${step}" = "esfc" ]]; then

    export NTHREADS_ESFC=${threads_per_task_esfc:-${max_threads_per_task}}
    export APRUN_ESFC="${APRUN} --cpus-per-task=${NTHREADS_ESFC}"

    export NTHREADS_CYCLE=${threads_per_task_cycle:-14}
    [[ ${NTHREADS_CYCLE} -gt ${max_tasks_per_node} ]] && export NTHREADS_CYCLE=${max_tasks_per_node}
    export APRUN_CYCLE="${APRUN} --cpus-per-task=${NTHREADS_CYCLE}"

elif [[ "${step}" = "epos" ]]; then

    export NTHREADS_EPOS=${NTHREADSmax}
    export APRUN_EPOS="${APRUN} --cpus-per-task=${NTHREADS_EPOS}"

elif [[ "${step}" = "postsnd" ]]; then

    export CFP_MP="YES"

    export NTHREADS_POSTSND=${NTHREADS1}
    export APRUN_POSTSND="${APRUN} --cpus-per-task=${NTHREADS_POSTSND}"

    export NTHREADS_POSTSNDCFP=${threads_per_task_postsndcfp:-1}
    [[ ${NTHREADS_POSTSNDCFP} -gt ${max_threads_per_task} ]] && export NTHREADS_POSTSNDCFP=${max_threads_per_task}
    export APRUN_POSTSNDCFP="${launcher} -n ${ntasks_postsndcfp} ${mpmd_opt}"

elif [[ "${step}" = "awips" ]]; then

    export NTHREADS_AWIPS=${NTHREADS1}
    export APRUN_AWIPSCFP="${APRUN} ${mpmd_opt}"

elif [[ "${step}" = "gempak" ]]; then

    export CFP_MP="YES"

    export NTHREADS_GEMPAK=${NTHREADS1}
    [[ ${NTHREADS_GEMPAK} -gt ${max_threads_per_task} ]] && export NTHREADS_GEMPAK=${max_threads_per_task}

elif [[ "${step}" = "fit2obs" ]]; then

    export NTHREADS_FIT2OBS=${NTHREADS1}
    export MPIRUN="${APRUN} --cpus-per-task=${NTHREADS_FIT2OBS}"

fi
