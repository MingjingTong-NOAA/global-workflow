#! /usr/bin/env bash

########## config.fcst ##########
# Forecast specific

echo "BEGIN: config.fcst"

# Source model specific information that is resolution dependent
. $EXPDIR/config.fv3 $CASE
[[ "$CDUMP" == "gfs" ]] && export nth_fv3=$nth_fv3_gfs

# Get task specific resources
. $EXPDIR/config.resources fcst

if [ $DONST = "YES" ]; then
    . $EXPDIR/config.nsst
fi

export FORECASTSH="$HOMEgfs/scripts/exglobal_forecast_shield.sh"
export FCSTEXECDIR="$HOMEgfs/exec"
export FCSTEXEC="shield.x"
export npe_fv3=$npe_fcst # This is model resolution dependent, see note above

if [[ "$CDUMP" == "gfs" ]] ; then
   export npe_fv3=$npe_fcst_gfs
   export layout_x=$layout_x_gfs
   export layout_y=$layout_y_gfs
   export WRITE_GROUP=$WRITE_GROUP_GFS
   export WRTTASK_PER_GROUP=$WRTTASK_PER_GROUP_GFS
fi

# External IC configuration
if [ ${gfs_ver:-"v16"} = "v16" ]; then
  export ncep_levs=${ncep_levs:-128}
else
  export ncep_levs=${ncep_levs:-65}
fi

# Model configuration
export TYPE="nh"
export MONO="non-mono"

# Options of stratosphere O3 physics reaction coefficients (not for SHiELD)
export new_o3forc="YES"

# do_ugwp=T: use unified CGWD and OGWD, and turbulent orographic form drag (TOFD)
# do_ugwp=F: use unified CGWD but old OGWD, TOFD is not uded.
export do_ugwp=".false."
export do_tofd=".true."
export launch_level=$(echo "$LEVS/2.35" |bc)

# Sponge layer settings for L127
if [ $LEVS = "128" -a "$CDUMP" = "gdas" ]; then
   export  tau=5.0
   export  rf_cutoff=1.0e3
   export  d2_bg_k1=0.20
   export  d2_bg_k2=0.0
fi

# PBL/turbulance schemes
export hybedmf=".false."
export ysupbl=".false."
export satmedmf=".true."
export isatmedmf=0
tbf=""
if [ $satmedmf = ".true." ]; then tbf="_satmedmf" ; fi

# Land surface model. (2--NoahMP, landice=F); (1--Noah, landice=T) (not for SHiELD)
export lsm=1
if [ $lsm -eq 2 ]; then
    export lheatstrg=".false."
    export landice=".false."
else
    export lheatstrg=".true."
    export landice=".true."
fi

# Radiation options 
export IAER=111     ;#spectral band mapping method for aerosol optical properties
export iovr_lw=3    ;#de-correlation length cloud overlap method (Barker, 2008) 
export iovr_sw=3    ;#de-correlation length cloud overlap method (Barker, 2008) 
export icliq_sw=2   ;#cloud optical coeffs from AER's newer version v3.9-v4.0 for hu and stamnes


# Microphysics configuration
export dnats=0
export cal_pre=".true."
export do_sat_adj=".false."
export random_clds=".true."

if [ $imp_physics -eq 99 ]; then # ZhaoCarr
    export ncld=1
    export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_zhaocarr${tbf}"
    export nwat=2

elif [ $imp_physics -eq 6 ]; then # WSM6
    export ncld=2
    export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_wsm6${tbf}"
    export nwat=6

elif [ $imp_physics -eq 8 ]; then # Thompson
    export ncld=2
    export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_thompson${tbf}"
    export nwat=6

elif [ $imp_physics -eq 11 ]; then # GFDL
    export ncld=5
    export nwat=6
    export do_inline_mp=".true."
    # CPSD configuration
    export prog_ccn=".true."
    # aerosol configuration
    export do_aerosol=".true."
    if [[ $do_aerosol == ".true." || $do_aerosol == ".T." ]]; then
       export dnats=2
       export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_6species_aero"
    else
       export dnats=1
       export FIELD_TABLE="$HOMEgfs/parm/parm_fv3diag/field_table_6species"
    fi
    export cal_pre=".false."
    export do_sat_adj=".false."
    export random_clds=".false."
    export reiflag=7

    export hord_mt_nh_nonmono=5
    export hord_xx_nh_nonmono=5
    export vtdm4_nh_nonmono=0.06
    export imfshalcnv=2
    export imfdeepcnv=2
    export nord=2
    export dddmp=0.2
    export d4_bg=0.12
    export fv_sg_adj=900
else
    echo "Unknown microphysics option, ABORT!"

fi
#---------------------------------------------------------------------

# ideflate: netcdf zlib lossless compression (0-9): 0 no compression
# nbits: netcdf lossy compression level (0-32): 0 lossless
export ideflate=1
export nbits=14
export ishuffle=0
# compression for RESTART files written by FMS 
export shuffle=1
export deflate_level=1

# Disable the use of coupler.res; get model start time from model_configure
export USE_COUPLER_RES="NO"

if [[ $EXP_WARM_START = ".false." && ( "$MODE" = "forecast-only" || "$SDATE" = "$CDATE" ) ]]; then
   export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_shield_ic"
   export first_time_step=".true."
else
   export DIAG_TABLE="$HOMEgfs/parm/parm_fv3diag/diag_table_shield"
fi

# The following (restart_interval) are for GFS
if [[ "$CDUMP" == "gdas" ]] ; then # GDAS cycle specific parameters

    # Write restart files, where $number is current model start time.
    # restart_interval:        $number
    #    number=0, writes out restart files at the end of forecast.
    #    number>0, writes out restart files at the frequency of $number and at the end of forecast.
    # restart_interval:        "$number -1"
    #    writes out restart files only once at $number forecast hour.
    # restart_interval:        "$number1 $number2 $number3 ..."
    #    writes out restart file at the specified forecast hours
    export restart_interval=${restart_interval:-6}

    # For IAU, write restarts at beginning of window also
    if [ $DOIAU = "YES" ]; then
       export restart_interval="6 9"
       if [[ "$SDATE" = "$CDATE" && $EXP_WARM_START = ".false." ]]; then export restart_interval="3 6"; fi # Cold starting
    fi

    # Turn on dry mass adjustment in GDAS
    export adjust_dry_mass=".true."

elif [[ "$CDUMP" == "gfs" ]] ; then # GFS cycle specific parameters

    # Write gfs restart files to rerun fcst from any break point
    export restart_interval_gfs=${restart_interval_gfs:-0}
    if [ $restart_interval_gfs -le 0 ]; then
        export restart_interval=0
    else
        rst_list=""
        IAU_OFFSET=${IAU_OFFSET:-0}
        [[ $DOIAU = "NO" ]] && export IAU_OFFSET=0
        xfh=$((restart_interval_gfs+(IAU_OFFSET/2)))
        while [ $xfh -le $FHMAX_GFS ]; do
          rst_list="$rst_list $xfh"
          xfh=$((xfh+restart_interval_gfs))
        done
        export restart_interval="$rst_list"
    fi

    # Turn off dry mass adjustment in GFS
    export adjust_dry_mass=".false."
fi


# Regrid tiles to global Gaussian grid in NEMSIO
export REGRID_NEMSIO_SH="$HOMEgfs/ush/fv3gfs_regrid_nemsio.sh"
if [ $DONST = YES ]; then
    export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da.txt"
else
    export REGRID_NEMSIO_TBL="$HOMEgfs/parm/parm_fv3diag/variable_table_da_nonsst.txt"
fi

# Remap tiles to global latlon grid in NetCDF
export REMAPSH="$HOMEgfs/ush/fv3gfs_remap.sh"
export master_grid="0p25deg"                   # 1deg 0p5deg 0p25deg 0p125deg etc
export npe_remap=$((npe_fcst < 240 ? npe_fcst : 240))

if [[ "$CDUMP" == "gdas" ]] ; then
   export npe_c2g=$(((FHMAX-FHMIN)/FHOUT+1))
else
   export npe_c2g=$(((FHMAX_GFS-FHMIN_GFS)/FHOUT_GFS+1))
fi

# Global latlon NetCDF to nemsio utility parameters
export NC2NEMSIOSH="$HOMEgfs/ush/fv3gfs_nc2nemsio.sh"

export GAUATMSEXE=$EXECgfs/fv3_c2g_atms.x

export SIGLEVEL="$FIXgsi/global_hyblev.l${LEVS}.txt"

# cubed-sphere to gaussian regriding
export rmhydro=".true."
export pseudo_ps=".true."
# if phy_data="phy_data", will output cnvw and cnvc
export phy_data=""

if [[ $phy_data != "" ]]; then
   export nvar3dout=16
fi

# Remember config.efcs will over-ride these values for ensemble forecasts
# if these variables are re-defined there.
# Otherwise, the ensemble forecast will inherit from config.fcst

export isatmedmf=1
export xkgdx=25000.0
export xkzminv=0.0
export xkzm_m=1.5
export xkzm_h=1.5
export xkzm_ml=1.0
export xkzm_hl=1.0
export xkzm_mi=1.5
export xkzm_hi=1.5
export rlmx=300.0

echo "END: config.fcst"
